// Generated by view binder compiler. Do not edit!
package com.example.CurrencyConvertor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.CurrencyConvertor.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText amountEditText;

  @NonNull
  public final TextView convertedAmountEditText;

  @NonNull
  public final Spinner currencySpinner;

  @NonNull
  public final Spinner currencySpinner2;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Guideline guideline4;

  @NonNull
  public final Guideline guideline5;

  @NonNull
  public final Guideline guideline8;

  @NonNull
  public final View horizontalLine;

  @NonNull
  public final View horizontalLine2;

  @NonNull
  public final FloatingActionButton roundButton;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView titleTextView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull EditText amountEditText,
      @NonNull TextView convertedAmountEditText, @NonNull Spinner currencySpinner,
      @NonNull Spinner currencySpinner2, @NonNull TextView descriptionTextView,
      @NonNull Guideline guideline, @NonNull Guideline guideline2, @NonNull Guideline guideline3,
      @NonNull Guideline guideline4, @NonNull Guideline guideline5, @NonNull Guideline guideline8,
      @NonNull View horizontalLine, @NonNull View horizontalLine2,
      @NonNull FloatingActionButton roundButton, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull TextView textView3, @NonNull TextView textView4,
      @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.amountEditText = amountEditText;
    this.convertedAmountEditText = convertedAmountEditText;
    this.currencySpinner = currencySpinner;
    this.currencySpinner2 = currencySpinner2;
    this.descriptionTextView = descriptionTextView;
    this.guideline = guideline;
    this.guideline2 = guideline2;
    this.guideline3 = guideline3;
    this.guideline4 = guideline4;
    this.guideline5 = guideline5;
    this.guideline8 = guideline8;
    this.horizontalLine = horizontalLine;
    this.horizontalLine2 = horizontalLine2;
    this.roundButton = roundButton;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountEditText;
      EditText amountEditText = ViewBindings.findChildViewById(rootView, id);
      if (amountEditText == null) {
        break missingId;
      }

      id = R.id.convertedAmountEditText;
      TextView convertedAmountEditText = ViewBindings.findChildViewById(rootView, id);
      if (convertedAmountEditText == null) {
        break missingId;
      }

      id = R.id.currencySpinner;
      Spinner currencySpinner = ViewBindings.findChildViewById(rootView, id);
      if (currencySpinner == null) {
        break missingId;
      }

      id = R.id.currencySpinner2;
      Spinner currencySpinner2 = ViewBindings.findChildViewById(rootView, id);
      if (currencySpinner2 == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = ViewBindings.findChildViewById(rootView, id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.guideline4;
      Guideline guideline4 = ViewBindings.findChildViewById(rootView, id);
      if (guideline4 == null) {
        break missingId;
      }

      id = R.id.guideline5;
      Guideline guideline5 = ViewBindings.findChildViewById(rootView, id);
      if (guideline5 == null) {
        break missingId;
      }

      id = R.id.guideline8;
      Guideline guideline8 = ViewBindings.findChildViewById(rootView, id);
      if (guideline8 == null) {
        break missingId;
      }

      id = R.id.horizontalLine;
      View horizontalLine = ViewBindings.findChildViewById(rootView, id);
      if (horizontalLine == null) {
        break missingId;
      }

      id = R.id.horizontalLine2;
      View horizontalLine2 = ViewBindings.findChildViewById(rootView, id);
      if (horizontalLine2 == null) {
        break missingId;
      }

      id = R.id.roundButton;
      FloatingActionButton roundButton = ViewBindings.findChildViewById(rootView, id);
      if (roundButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, amountEditText,
          convertedAmountEditText, currencySpinner, currencySpinner2, descriptionTextView,
          guideline, guideline2, guideline3, guideline4, guideline5, guideline8, horizontalLine,
          horizontalLine2, roundButton, textView, textView2, textView3, textView4, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
